ds.encrypt.key=d073c52a75a56dfe37402c3cedd9b4f7

#https config
server.port=10086
server.ssl.key-store=classpath:keystore.p12
server.ssl.key-store-password=123456
server.ssl.key-password=123456
http_port=16888

#https config new
server.ssl.key-store-type=PKCS12
server.ssl.key-alias=tomcat

server.http2.enabled=true
server.compression.enabled=true

#default true, not to be set
#server.ssl.enabled=true

#default TLS, not to be set	
#server.ssl.protocol=TLS

#Spring boot actuator config
management.endpoint.shutdown.enabled=true
management.endpoints.web.exposure.include=info,health,shutdown,beans,conditions,configprops,env,httptrace,mappings,sessions,threaddump

#spring-session setting
spring.session.store-type=jdbc

#redis config
# database name
spring.redis.database=0
# server host1
spring.redis.host=127.0.0.1
# server password
#spring.redis.password= 
#connection port
spring.redis.port=6379
# pool settings ...
spring.redis.jedis.pool.max-idle=8
spring.redis.jedis.pool.min-idle=0
spring.redis.jedis.pool.max-active=8
#spring.redis.jedis.pool.max-wait.seconds=-1
spring.redis.timeout=1000

#param ref sample
book.name=SpringCloud
book.author=ZhaiYongchao
book.desc=${book.author}  is writing<${book.name}>

#random string
com.didispace.blog.value=${random.value}
#random int
com.didispace.blog.number=${random.int}
#random long
com.didispace.blog.bignumber=${random.long}
#random number in 10
com.didispace.blog.test1=${random.int(10)}
#random number between 10~20
com.didispace.blog.test2=${random.int[10,20]}




#List type 1
spring.my-example.url[0]=http://example.com
spring.my-example.url[1]=http://spring.io

#List type 2
spring.my-example.url=http://example.com,http://spring.io

#Map type
spring.my-example.'[foo.baz]'=bar
spring.my-example.hello=world